package com.shiroExploit.util;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;
import java.util.Map;

public class HttpRequest {

    public static boolean request(String url, String cookieValue){
        boolean bool = true;
        HttpURLConnection connection = null;
        try{
            connection = (HttpURLConnection)new URL(url).openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("Cookie", "rememberMe=" + cookieValue);
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            connection.connect();

            Map<String, List<String>> map = connection.getHeaderFields();
            for(Map.Entry<String, List<String>> entry : map.entrySet()){
                //必须有
                if(entry.getKey() == null){
                    continue;
                }

                if(entry.getKey().equalsIgnoreCase("set-cookie")){
                    for(String str : entry.getValue()){
                        if(str.contains("rememberMe=deleteMe")){
                            bool = false;
                            break;
                        }
                    }
                }
            }
        }catch(Exception e){
            bool = false;
        }finally {
            if(connection != null){
                connection.disconnect();
            }
        }

        return bool;
    }

    public static String request(String url) throws IOException {
        HttpURLConnection connection = null;
        InputStream inputStream = null;
        BufferedReader reader = null;
        StringBuffer sb = new StringBuffer();

        try{
            connection = (HttpURLConnection)new URL(url).openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            connection.connect();

            int responseCode = connection.getResponseCode();
            if(responseCode == HttpURLConnection.HTTP_OK){
                inputStream = connection.getInputStream();
                reader = new BufferedReader(new InputStreamReader(inputStream));

                String line;
                while ((line = reader.readLine()) != null){
                    sb.append(line);
                }
            }else{
                return null;
            }
        }finally {
            if(connection != null){
                connection.disconnect();
            }

            try {

                if(inputStream != null){
                    inputStream.close();
                }

                if(reader != null){
                    reader.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        return sb.toString();
    }
}