package com.shiroexploit.util;

import java.io.*;
import java.util.*;

public class Config {
    private static Config config;
    private List<String> kyes;
    private String targetURL;
    private String rememberMeCookie;
    // 0 for Shiro550, 1 for Shiro721
    private int vulType = 0;
    // 0 for ceye, 1 for self-implemented oob service
    private int oobType = 0;
    private boolean useJRMP = true;
    private boolean skipIfFound = true;
    private String ceyeDomain = "7wtusr.ceye.io";
    private String ceyeToken = "a78a1cb49d91fe09e01876078d1868b2";
    private String OOBServerAddress;
    private int HTTPServicePort;
    private int JRMPServicePort;
    private int delay = 5;

    public static Config getInstance(){
        //懒汉式
        if(config == null){
            config = new Config();

            //初始化key
            ArrayList<String> list;
            Set<String> keys = loadKeys();

            if(keys.size() == 0){
                list = new ArrayList<>();
                list.add("kPH+bIxk5D2deZiIxcaaaA==");
            }else{
                list = new ArrayList<>(keys);
            }

            config.setKyes(list);
        }

        return config;
    }

    public int getOobType() {
        return oobType;
    }

    public void setOobType(int oobType) {
        this.oobType = oobType;
    }

    public List<String> getKyes() {
        return kyes;
    }

    public void setKyes(List<String> kyes) {
        this.kyes = kyes;
    }

    public String getTargetURL() {
        return targetURL;
    }

    public void setTargetURL(String targetURL) {
        this.targetURL = targetURL;
    }

    public String getRememberMeCookie() {
        return rememberMeCookie;
    }

    public void setRememberMeCookie(String rememberMeCookie) {
        this.rememberMeCookie = rememberMeCookie;
    }

    public int getVulType() {
        return vulType;
    }

    public void setVulType(int vulType) {
        this.vulType = vulType;
    }

    public boolean isUseJRMP() {
        return useJRMP;
    }

    public void setUseJRMP(boolean useJRMP) {
        this.useJRMP = useJRMP;
    }

    public boolean isSkipIfFound() {
        return skipIfFound;
    }

    public void setSkipIfFound(boolean skipIfFound) {
        this.skipIfFound = skipIfFound;
    }

    public String getCeyeDomain() {
        return ceyeDomain;
    }

    public String getCeyeToken() {
        return ceyeToken;
    }

    public String getOOBServerAddress() {
        return OOBServerAddress;
    }

    public void setOOBServerAddress(String OOBServerAddress) {
        this.OOBServerAddress = OOBServerAddress;
    }

    public int getHTTPServicePort() {
        return HTTPServicePort;
    }

    public void setHTTPServicePort(int HTTPServicePort) {
        this.HTTPServicePort = HTTPServicePort;
    }

    public int getJRMPServicePort() {
        return JRMPServicePort;
    }

    public void setJRMPServicePort(int JRMPServicePort) {
        this.JRMPServicePort = JRMPServicePort;
    }

    public int getDelay() {
        return delay;
    }

    private static Set<String> loadKeys(){
        Set<String> keySets = new HashSet<>();

        String path = System.getProperty("user.dir") + "/config/keys.conf";
        try {
            FileInputStream inputStream = new FileInputStream(path);
            BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
            String temp = "";
            while((temp = br.readLine()) != null){
                if(temp.length() == 24){
                    keySets.add(temp);
                }
            }
        } catch (FileNotFoundException e) {
            //doNothing
        } catch (IOException e) {
            //doNothing
        }

        return keySets;
    }
}
